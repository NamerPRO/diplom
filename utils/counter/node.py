from typing import Dict


class Node:
    """Представляет узел префиксного дерева"""

    def __init__(self, value: int = 0) -> None:
        """
        Инициализация узла префиксного дерева.

        Аргументы:
            value: значение, хранящееся в узле префиксного дерева
        """
        self.value = value
        self.children: Dict[str, 'Node'] = {}

    def __getitem__(self, item: str) -> 'Node':
        """
        Возвращает узел-потомок префиксного дерева,
        связанный с заданным ключом.

        Аргументы:
            item: Ключ, по которому нужно получить значение.

        Возвращаемое значение:
            Узел-потомок префиксного дерева, связанный
            с заданным ключом.
        """
        return self.children[item]

    def __setitem__(self, key: str, value: 'Node') -> None:
        """
        Добавляет узел в префксное дерево по заданным
        ключу и значению, если с заданным ключом не
        связан узел. В противном случае, изменяет значение
        узла префиксного дерева по заданным ключу и
        значению.

        Аргументы:
            key: Ключ, который необходимо добавить или по
                которому необходимо обновить значение.
            value: Значение, которое связано с ключом.
        """
        self.children[key] = value